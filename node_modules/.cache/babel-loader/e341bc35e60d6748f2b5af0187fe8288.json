{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Documents\\\\IIT Bombay Intern\\\\Coding Round\\\\tasker-react-sample-app\\\\src\\\\components\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport TaskEdit from \"./TaskEdit\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task({\n  task,\n  onTglStatus\n}) {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    desc: \"Learn React\",\n    id: 1,\n    col: 1,\n    date: \"wow\",\n    complete: false\n  }, {\n    desc: \"Profit\",\n    id: 2,\n    col: 2,\n    date: \"yayyyyy\",\n    complete: false\n  }, {\n    desc: \"Loss\",\n    id: 3,\n    col: 3,\n    date: \"naaaaa\",\n    complete: false\n  }]);\n\n  const onSaveTask = ({\n    desc,\n    date,\n    col\n  }) => {\n    console.log(\"saving tasks\");\n    setTasks([{\n      desc: desc,\n      date: date,\n      id: Date.now(),\n      col: col,\n      complete: false\n    }]);\n  };\n\n  const [showTaskEdit, setShowTaskEdit] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: task.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://icongr.am/feather/link-2.svg?size=15&color=currentColor\",\n            alt: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), task.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 is-center\",\n        children: [task.complete, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button icon-only clear\",\n          onClick: () => onTglStatus(task),\n          children: [task.complete && \"✅\", !task.complete && \"⬜\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 text-right\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          variant: \"warning\",\n          onClick: () => setShowTaskEdit(!showTaskEdit),\n          children: [!showTaskEdit && \"Update\", showTaskEdit && \"➖\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), showTaskEdit && /*#__PURE__*/_jsxDEV(TaskEdit, {\n        task: {\n          task\n        },\n        onSaveTask: onSaveTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"3zqgQHHFYxyLud3HbUmehqEGh04=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/Abhishek/Documents/IIT Bombay Intern/Coding Round/tasker-react-sample-app/src/components/Task.js"],"names":["TaskEdit","useState","Task","task","onTglStatus","tasks","setTasks","desc","id","col","date","complete","onSaveTask","console","log","Date","now","showTaskEdit","setShowTaskEdit"],"mappings":"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","sourcesContent":["import TaskEdit from \"./TaskEdit\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction Task({ task, onTglStatus }) {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      desc: \"Learn React\",\r\n      id: 1,\r\n      col: 1,\r\n      date: \"wow\",\r\n      complete: false,\r\n    },\r\n    {\r\n      desc: \"Profit\",\r\n      id: 2,\r\n      col: 2,\r\n      date: \"yayyyyy\",\r\n      complete: false,\r\n    },\r\n    {\r\n      desc: \"Loss\",\r\n      id: 3,\r\n      col: 3,\r\n      date: \"naaaaa\",\r\n      complete: false,\r\n    },\r\n  ]);\r\n\r\n  const onSaveTask = ({ desc, date, col }) => {\r\n    console.log(\"saving tasks\");\r\n    setTasks([\r\n      { desc: desc, date: date, id: Date.now(), col: col, complete: false },\r\n\r\n    ]);\r\n  };\r\n\r\n  const [showTaskEdit, setShowTaskEdit] = useState(false);\r\n\r\n\r\n  return (\r\n    <div className=\"card text-left\" key={task.id}>\r\n      <div className=\"row\">\r\n        <div className=\"col-10\">\r\n          <h4>{task.desc}</h4>\r\n          <div className=\"task-meta\">\r\n            <img\r\n              src=\"https://icongr.am/feather/link-2.svg?size=15&color=currentColor\"\r\n              alt=\"description\"\r\n            />\r\n            {task.date}\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-2 is-center\">\r\n          {task.complete}\r\n          <button\r\n            className=\"button icon-only clear\"\r\n            onClick={() => onTglStatus(task)}>\r\n            {task.complete && \"✅\"}\r\n            {!task.complete && \"⬜\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"col-12 text-right\">\r\n          <button\r\n            variant=\"warning\"\r\n            onClick={() => setShowTaskEdit(!showTaskEdit)}>\r\n            {!showTaskEdit && \"Update\"}\r\n            {showTaskEdit && \"➖\"}\r\n          </button>\r\n            </div>\r\n            {showTaskEdit && <TaskEdit task={{task}} onSaveTask={onSaveTask} />}\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}